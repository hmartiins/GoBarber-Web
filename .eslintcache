[{"/home/hmartins/Estudos/GoBarber-Web/src/context/AuthContext.tsx":"1","/home/hmartins/Estudos/GoBarber-Web/src/pages/SignIn/index.tsx":"2","/home/hmartins/Estudos/GoBarber-Web/src/services/api.ts":"3"},{"size":756,"mtime":1610412509282,"results":"4","hashOfConfig":"5"},{"size":2128,"mtime":1610413457226,"results":"6","hashOfConfig":"5"},{"size":116,"mtime":1610402452542,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"6dpvwp",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hmartins/Estudos/GoBarber-Web/src/context/AuthContext.tsx",["16"],"import React, { createContext, useCallback } from 'react';\nimport api from '../services/api';\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  name: string;\n  signIn(credentials: SignInCredentials): Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    console.log(response.data);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ name: 'Henrique', signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n",["17","18","19","20","21"],"/home/hmartins/Estudos/GoBarber-Web/src/pages/SignIn/index.tsx",[],"/home/hmartins/Estudos/GoBarber-Web/src/services/api.ts",[],{"ruleId":"22","severity":1,"message":"23","line":23,"column":5,"nodeType":"24","messageId":"25","endLine":23,"endColumn":16},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["36"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"padding-line-between-statements"]